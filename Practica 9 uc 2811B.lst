CCS PCM C Compiler, Version 5.015, 5967               16-may.-25 11:01

               Filename:   C:\Users\brandon\OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO\2025-ll\Microcontroladores\Laboratorio\Previo9\Practica 9 uc 2811B.lst

               ROM used:   92 words (4%)
                           Largest free fragment is 1956
               RAM used:   9 (4%) at main() level
                           9 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include    <16F628A.h> 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #fuses      INTRC_IO 
.................... #fuses      NOWDT,NOBROWNOUT,PUT,MCLR,NOLVP 
.................... #fuses      NOPROTECT,NOCPD 
....................  
.................... #use        delay(clock=4M) 
....................  
.................... #use        fast_io(A) 
.................... #use        fast_io(B) 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    0E.3
0009:  MOVLW  07
000A:  BCF    03.5
000B:  MOVWF  1F
000C:  BCF    03.7
000D:  CLRF   22
000E:  MOVLW  13
000F:  MOVWF  21
0010:  CLRF   24
0011:  MOVLW  26
0012:  MOVWF  23
.................... { 
....................    long valor=19;   //Variable de 16 bits para el ciclo de trabajo de 45% 
....................    long valor2=38; 
....................     
....................    set_tris_A(0xFF); 
0013:  MOVLW  FF
0014:  BSF    03.5
0015:  MOVWF  05
....................    set_tris_B(0x00); 
0016:  MOVLW  00
0017:  MOVWF  06
....................     
....................    output_A(0); 
0018:  BCF    03.5
0019:  CLRF   05
....................    output_B(0); 
001A:  CLRF   06
....................     
....................    while(1) 
....................    { 
....................       if(input(PIN_A0==0)) 
001B:  BTFSS  00.0
001C:  GOTO   03C
....................       { 
....................          set_pwm1_duty(valor); 
001D:  MOVF   22,W
001E:  MOVWF  79
001F:  MOVF   21,W
0020:  MOVWF  78
0021:  RRF    79,F
0022:  RRF    78,F
0023:  RRF    79,F
0024:  RRF    78,F
0025:  RRF    79,F
0026:  MOVF   78,W
0027:  MOVWF  15
0028:  RRF    79,F
0029:  RRF    79,W
002A:  ANDLW  30
002B:  MOVWF  77
002C:  MOVF   17,W
002D:  ANDLW  CF
002E:  IORWF  77,W
002F:  MOVWF  17
....................           
....................          setup_timer_2(T2_DIV_BY_16,9,4); //Ciclo de trabajo de 45%, pr2=9,osc=4MHz, Tpwm=167us 
0030:  MOVLW  18
0031:  MOVWF  78
0032:  IORLW  06
0033:  MOVWF  12
0034:  MOVLW  09
0035:  BSF    03.5
0036:  MOVWF  12
....................           
....................          setup_ccp1(CCP_PWM); 
0037:  BCF    03.5
0038:  BCF    06.3
0039:  MOVLW  0C
003A:  MOVWF  17
....................       } 
003B:  GOTO   05A
....................       else 
....................       { 
....................          set_pwm1_duty(valor2); 
003C:  MOVF   24,W
003D:  MOVWF  79
003E:  MOVF   23,W
003F:  MOVWF  78
0040:  RRF    79,F
0041:  RRF    78,F
0042:  RRF    79,F
0043:  RRF    78,F
0044:  RRF    79,F
0045:  MOVF   78,W
0046:  MOVWF  15
0047:  RRF    79,F
0048:  RRF    79,W
0049:  ANDLW  30
004A:  MOVWF  77
004B:  MOVF   17,W
004C:  ANDLW  CF
004D:  IORWF  77,W
004E:  MOVWF  17
....................        
....................          setup_timer_2(T2_DIV_BY_16,9,4); //Ciclo de trabajo de 90%, pr2=9,osc=4MHz, Tpwm=167us 
004F:  MOVLW  18
0050:  MOVWF  78
0051:  IORLW  06
0052:  MOVWF  12
0053:  MOVLW  09
0054:  BSF    03.5
0055:  MOVWF  12
....................           
....................          setup_ccp1(CCP_PWM); 
0056:  BCF    03.5
0057:  BCF    06.3
0058:  MOVLW  0C
0059:  MOVWF  17
....................       } 
005A:  GOTO   01B
....................    } 
.................... } 
005B:  SLEEP

Configuration Fuses:
   Word  1: 3F30   NOWDT PUT INTRC_IO MCLR NOBROWNOUT NOLVP NOCPD NOPROTECT
